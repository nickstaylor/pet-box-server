{
  "{\"sourceRoot\":\"/Users/Nick/turing/Mod4/Prework/pet-box/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Nick/turing/Mod4/Prework/pet-box\",\"filename\":\"/Users/Nick/turing/Mod4/Prework/pet-box/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Nick/turing/Mod4/Prework/pet-box\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Nick/turing/Mod4/Prework/pet-box/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Nick/turing/Mod4/Prework/pet-box",
      "filename": "/Users/Nick/turing/Mod4/Prework/pet-box/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Nick/turing/Mod4/Prework/pet-box",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Nick/turing/Mod4/Prework/pet-box/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Nick/turing/Mod4/Prework/pet-box/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Nick/turing/Mod4/Prework/pet-box/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar app = express();\n\nvar cors = require('cors');\n\napp.use(express[\"static\"]('public'));\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\napp.get('/', function (request, response) {\n  response.send('Oh hey Pet Box');\n});\napp.listen(app.get('port'), function () {\n  console.log(\"\".concat(app.locals.title, \" is running on http://localhost:\").concat(app.get('port'), \".\"));\n});\napp.use(express.json());\napp.use(cors());\napp.locals.pets = [{\n  id: 'a1',\n  name: 'Rover',\n  type: 'dog'\n}, {\n  id: 'b2',\n  name: 'Marcus Aurelius',\n  type: 'parakeet'\n}, {\n  id: 'c3',\n  name: 'Craisins',\n  type: 'cat'\n}];\napp.locals.updatedPets = [];\napp.get('/api/v1/pets', function (request, response) {\n  var pets = app.locals.pets; // const updatedPets = app.locals.updatedPets\n\n  response.json({\n    pets: pets\n  });\n});\napp.get('/api/v1/pets/:id', function (request, response) {\n  var id = request.params.id;\n  var pet = app.locals.pets.find(function (pet) {\n    return pet.id === id;\n  });\n\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  response.status(200).json(pet);\n});\napp.post('/api/v1/pets', function (request, response) {\n  var id = Date.now().toString();\n  var pet = request.body;\n\n  for (var _i = 0, _arr = ['name', 'type']; _i < _arr.length; _i++) {\n    var requiredParameter = _arr[_i];\n\n    if (!pet[requiredParameter]) {\n      return response.status(422).send({\n        error: \"Expected format: { name: <String>, type: <String> }. You're missing a \".concat(requiredParameter, \" property.\")\n      });\n    }\n  }\n\n  var name = pet.name,\n      type = pet.type;\n  app.locals.pets.push({\n    id: id,\n    name: name,\n    type: type\n  });\n  response.status(201).json({\n    id: id,\n    name: name,\n    type: type\n  });\n});\napp.get('/api/v1/updatedpets', function (request, response) {\n  var updatedPets = app.locals.updatedPets;\n\n  if (!updatedPets.length) {\n    response.send({\n      msg: 'Sorry, no pets have been updated yet.'\n    });\n  } else {\n    response.status(201).json({\n      updatedPets: updatedPets\n    });\n  }\n});\napp.patch('/api/v1/pets/:id', function (request, response) {\n  var id = request.params.id;\n  var found = app.locals.pets.some(function (pet) {\n    return pet.id === id;\n  });\n\n  if (found) {\n    var updatedPet = request.body;\n    app.locals.pets.forEach(function (pet) {\n      if (pet.id === id) {\n        var udpatedPet = pet.name = updatedPet.name ? updatedPet.name : pet.name;\n        pet.type = updatedPet.type ? updatedPet.type : pet.type;\n        response.status(200).json({\n          msg: 'Pet Updated',\n          pet: pet\n        });\n        var newPet = {\n          id: id,\n          name: pet.name,\n          type: pet.type\n        };\n        app.locals.updatedPets.push(newPet);\n      }\n    });\n  } else {\n    response.status(400).json({\n      msg: \"No pet with the id of \".concat(id)\n    });\n  }\n});\napp[\"delete\"]('/api/v1/pets/:id', function (request, response) {\n  var id = request.params.id;\n  var pets = app.locals.pets;\n  var pet = app.locals.pets.find(function (pet) {\n    return pet.id === id.toString();\n  });\n\n  if (!pet) {\n    return response.status(422).send({\n      error: \"Something is wrong here!\"\n    });\n  }\n\n  var index = pets.indexOf(pet);\n  pets.splice(index, 1);\n  response.status(201).json(pet);\n});\napp.get('/', function (request, response) {});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "cors",
        "use",
        "set",
        "process",
        "env",
        "PORT",
        "locals",
        "title",
        "get",
        "request",
        "response",
        "send",
        "listen",
        "console",
        "log",
        "json",
        "pets",
        "id",
        "name",
        "type",
        "updatedPets",
        "params",
        "pet",
        "find",
        "sendStatus",
        "status",
        "post",
        "Date",
        "now",
        "toString",
        "body",
        "requiredParameter",
        "error",
        "push",
        "length",
        "msg",
        "patch",
        "found",
        "some",
        "updatedPet",
        "forEach",
        "udpatedPet",
        "newPet",
        "index",
        "indexOf",
        "splice"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/Nick/turing/Mod4/Prework/pet-box/",
      "sourcesContent": [
        "const express = require('express');\nconst app = express();\nconst cors = require('cors')\napp.use(express.static('public'))\n\napp.set('port', process.env.PORT || 3000);\napp.locals.title = 'Pet Box';\napp.get('/', (request, response) => {\n  response.send('Oh hey Pet Box')\n});\n\napp.listen(app.get('port'), ()=> {\n  console.log(`${app.locals.title} is running on http://localhost:${app.get('port')}.`)\n});\n\napp.use(express.json());\napp.use(cors())\n\napp.locals.pets = [\n  { id: 'a1', name: 'Rover', type: 'dog' },\n  { id: 'b2', name: 'Marcus Aurelius', type: 'parakeet' },\n  { id: 'c3', name: 'Craisins', type: 'cat' }\n];\n\napp.locals.updatedPets = []\n\n\napp.get('/api/v1/pets', (request, response) => {\n  const pets = app.locals.pets\n  // const updatedPets = app.locals.updatedPets\n  response.json({pets})\n});\n\napp.get('/api/v1/pets/:id', (request, response) =>{\n  const { id } = request.params\n  const pet = app.locals.pets.find(pet => pet.id === id)\n    if (!pet) {\n      return response.sendStatus(404)\n    }\n  response.status(200).json(pet);\n});\n\n\napp.post('/api/v1/pets', (request, response)=>{\n  const id = (Date.now().toString())\n  const pet = request.body\n\n  for (let requiredParameter of ['name', 'type']){\n    if (!pet[requiredParameter]){\n      return response\n      .status(422)\n      .send({ error: `Expected format: { name: <String>, type: <String> }. You're missing a ${requiredParameter} property.`})\n    }\n  }\n  const { name, type } = pet;\n  app.locals.pets.push({id, name, type});\n  response.status(201).json({id, name, type})\n})\n\n\napp.get('/api/v1/updatedpets', (request, response) => {\nconst updatedPets = app.locals.updatedPets\nif (!updatedPets.length){\n  response.send({msg: 'Sorry, no pets have been updated yet.'})\n} else {\n  response.status(201).json({updatedPets})\n}\n})\n\napp.patch('/api/v1/pets/:id', (request, response)=>{\n  const { id } = request.params\n  const found = app.locals.pets.some(pet=> pet.id === id)\n  if (found){\n  const updatedPet = request.body\n  app.locals.pets.forEach(pet=> {\n    if(pet.id === id){\n      const udpatedPet =\n      pet.name = updatedPet.name ? updatedPet.name : pet.name\n      pet.type = updatedPet.type ? updatedPet.type : pet.type\n\n      response.status(200).json({ msg: 'Pet Updated', pet})\n      const newPet = {\n        id: id,\n        name: pet.name,\n        type: pet.type\n      }\n      app.locals.updatedPets.push(newPet)\n    }\n  })\n  } else {\n      response.status(400).json({ msg: `No pet with the id of ${id}`})\n    }\n\n})\n\napp.delete('/api/v1/pets/:id', (request, response) => {\n  const { id } = request.params;\n  const pets = app.locals.pets\n  const pet = app.locals.pets.find(pet => pet.id === id.toString());\n  if (!pet) {\n    return response\n.status(422)\n.send({ error: `Something is wrong here!` });\n}\n  const index = pets.indexOf(pet);\n pets.splice(index, 1);\n response.status(201).json(pet);\n})\n\n\n\napp.get('/', (request, response)=>{\n\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593125751724
  }
}